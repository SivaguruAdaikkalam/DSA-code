#include <iostream>
#include <vector>
#include <map>
#include <set>

using namespace std;

void solve() {
    int M;
    cin >> M;
    vector<int> recipe(M);
    map<int, int> ingredient_counts;
    vector<int> blocks;

    for (int i = 0; i < M; ++i) {
        cin >> recipe[i];
        ingredient_counts[recipe[i]]++;
        if (i == 0 || recipe[i] != recipe[i - 1]) {
            blocks.push_back(recipe[i]);  }
    }

    set<int> block_uniqueness_check(blocks.begin(), blocks.end());
    if (block_uniqueness_check.size() != blocks.size()) {
        cout << "NO" << endl;
        return;    }

    set<int> quantity_uniqueness_check;
    for (auto const& pair : ingredient_counts) {
        if (!quantity_uniqueness_check.insert(pair.second).second) {
            cout << "NO" << endl;
            return;  }
    }

    cout << "YES" << endl;}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int T;
    cin >> T;
    while (T--) solve();
    return 0;}
